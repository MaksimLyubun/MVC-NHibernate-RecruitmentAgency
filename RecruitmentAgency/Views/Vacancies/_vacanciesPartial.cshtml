@model IEnumerable<RecruitmentAgency.Models.Vacancy>

<table class="table table-bordered table-striped">
    <thead class="thead-light">
        <tr>
            <th class="sorter-text"> @Html.DisplayNameFor(model => model.Name)</th>
            <th class="sorter-text"> @Html.DisplayNameFor(model => model.Description)</th>
            <th class="sorter-text"> @Html.DisplayNameFor(model => model.Term)</th>
            <th class="sorter-text"> @Html.DisplayNameFor(model => model.Company)</th>
            <th class="sorter-text"> @Html.DisplayNameFor(model => model.MinExperience)</th>
            <th class="sorter-text"> @Html.DisplayNameFor(model => model.Salary)</th>
            @if (ViewBag.user.IsEmployee())
            {
                <th class="sorter-text">
                    @Html.DisplayNameFor(model => model.Archived)
                </th>
                <th data-sorter="false" data-filter="false"></th>
            }
            @if (ViewBag.user.IsAdmin())
            {
                <th class="sorter-text">
                    @Html.DisplayNameFor(model => model.Archived)
                </th>
            }
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th> @Html.DisplayNameFor(model => model.Name)</th>
            <th> @Html.DisplayNameFor(model => model.Description)</th>
            <th> @Html.DisplayNameFor(model => model.Term)</th>
            <th> @Html.DisplayNameFor(model => model.Company)</th>
            <th> @Html.DisplayNameFor(model => model.MinExperience)</th>
            <th> @Html.DisplayNameFor(model => model.Salary)</th>
            @if (ViewBag.user.IsEmployee())
            {
                <th>
                    @Html.DisplayNameFor(model => model.Archived)
                </th>
                <th></th>
            }
            @if (ViewBag.user.IsAdmin())
            {
                <th>
                    @Html.DisplayNameFor(model => model.Archived)
                </th>
            }
        </tr>
        <tr>
            <th colspan="8" class="ts-pager">
                <div class="form-inline">
                    <div class="btn-group btn-group-sm mx-1" role="group">
                        <button type="button" class="btn btn-secondary first" title="Первая">⇤</button>
                        <button type="button" class="btn btn-secondary prev" title="Предыдущая">←</button>
                    </div>
                    <span class="pagedisplay"></span>
                    <div class="btn-group btn-group-sm mx-1" role="group">
                        <button type="button" class="btn btn-secondary next" title="Следующая">→</button>
                        <button type="button" class="btn btn-secondary last" title="Последняя">⇥</button>
                    </div>
                    <select class="form-control-sm custom-select px-1 pagesize" title="Количество вакансий на странице">
                        <option selected="selected" value="5">5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="all">Все вакансии</option>
                    </select>
                    <select class="form-control-sm custom-select px-4 mx-1 pagenum" title="Выберите номер страницы"></select>
                </div>
            </th>
        </tr>
    </tfoot>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Term)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Company)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinExperience)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Salary)
            </td>
            @if (ViewBag.user.IsEmployee())
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    <label class="buttomStyle">
                        <input type="button" class="buttomNone" onclick="location.href='@Url.Action("Edit", "Vacancies", new { vacancyId = item.Id })'" />
                        Изменить
                    </label>
                    <label class="buttomStyle">
                        <input type="button" class="buttomNone" onclick="location.href='@Url.Action("Details", "Vacancies", new { vacancyId = item.Id })'" />
                        Подробнее
                    </label>
                    <label class="buttomStyle">
                        <input type="button" class="buttomNone" onclick="location.href='@Url.Action("Delete", "Vacancies", new { vacancyId = item.Id })'" />
                        Удалить
                    </label>
                </td>
            }
            @if (ViewBag.user.IsAdmin())
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
            }
        </tr>
        }

    </tbody>
</table>

<script src="~/js/jquery.tablesorter.js"></script>
<script src="~/js/jquery.tablesorter.widgets.js"></script>
<script src="~/js/jquery.tablesorter.pager.js"></script>

<script type="text/javascript">
    $(function () {

        $("table").tablesorter({
            theme: "bootstrap",

            widthFixed: true,

            widgets: ["filter", "columns", "zebra"],

            widgetOptions: {
                zebra: ["even", "odd"],

                columns: ["primary", "secondary", "tertiary"],

                filter_reset: ".reset",

                filter_cssFilter: [
                    'form-control',
                    'form-control',
                    'form-control',
                    'form-control',
                    'form-control',
                    'form-control',
                    'form-control custom-select'
                ],

                filter_functions: {
                    6: {
                        "Открыта": function (e, n, f, i, $r, c, data) { return n == "открыта"; },
                        "Закрыта": function (e, n, f, i, $r, c, data) { return n == "закрыта"; },
                    }
                }
            }
        })
            .tablesorterPager({
                container: $(".ts-pager"),

                cssGoto: ".pagenum",

                removeRows: false,

                output: '{startRow} - {endRow} / {filteredRows} ({totalRows})'

            });

    });
</script>